% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/document_NVIpkg.R
\name{document_NVIpkg}
\alias{document_NVIpkg}
\title{Update styling and documentation of a package}
\usage{
document_NVIpkg(
  pkg = stringi::stri_extract_last_words(usethis::proj_path()),
  pkg_path = usethis::proj_path(),
  style = FALSE,
  manual = "update",
  contributing = FALSE,
  readme = FALSE,
  ...
)
}
\arguments{
\item{pkg}{[\code{character}]\cr
The package name, defaults to \code{stringi::stri_extract_last_words(usethis::proj_path())}.}

\item{pkg_path}{[\code{character}]\cr
The path to the package directory, defaults to \code{usethis::proj_path()}.}

\item{style}{[\code{logical}]\cr
Should the package be styled, defaults to \code{FALSE}.}

\item{manual}{[\code{character}]\cr
Should a reference manual be included, updated or removed. Defaults to
\code{manual = "update"} that will update the manual if exists and do
nothing if it doesn't exist.}

\item{contributing}{[\code{logical}]\cr
Should \code{CONTRIBUTING.md} and the vignette "Contribute to NVIpkg" be
updated, defaults to \code{FALSE}.}

\item{readme}{[\code{logical}]\cr
Should \code{README} be updated, defaults to \code{FALSE}.}

\item{\dots}{Other arguments to be passed to \code{styler::style_pkg}.}
}
\value{
none. Updated help files for all functions and,
    depending on argument input, can updated style,
    \code{CONTRIBUTING.md}, and \code{README}
}
\description{
A wrapper around functions for styling, write the help files
    and update \code{README} and \code{CONTRIBUTING.md}.
}
\details{
The help files for R-functions will always be generated. Whether
    styling should be performed and \code{README} and \code{CONTRIBUTING.md}
    should be updated are controlled by input arguments.

    Default value for styling is \code{scope = "spaces"}. Input to
    \code{scope} can be any subset of c("spaces", "indention", "line_breaks", "tokens").
    For indention, rather use \code{Ctrl+I} than \code{scope = "indention"}.
    Be careful if using \code{scope = "tokens"} as code may be broken.
}
\examples{
\dontrun{

# Attach packages and set up with temporary directory
library(NVIpackager)
td <- tempdir()
if (!dir.exists(file.path(td, "NVItest"))) {
  dir.create(file.path(td, "NVItest"))
}
if (!dir.exists(file.path(td, "NVItest", "vignettes"))) {
  dir.create(file.path(td, "NVItest", "vignettes"))
}

document_NVIpkg(pkg = "NVItest",
                pkg_path = file.path(td, "NVItest"),
                style = FALSE,
                contributing = TRUE,
                readme = TRUE)
}

}
\author{
Petter Hopp Petter.Hopp@vetinst.no
}
