% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/increase_NVIpkg_version.R
\name{increase_NVIpkg_version}
\alias{increase_NVIpkg_version}
\title{Increase the package version}
\usage{
increase_NVIpkg_version(
  pkg = stringi::stri_extract_last_words(usethis::proj_path()),
  pkg_path = usethis::proj_path(),
  type = "develop",
  document = FALSE,
  ...
)
}
\arguments{
\item{pkg}{[\code{character(1)}]\cr
The package name. Defaults to \code{stringi::stri_extract_last_words(usethis::proj_path())}.}

\item{pkg_path}{[\code{character(1)}]\cr
The path to the package directory. Defaults to \code{usethis::proj_path()}.}

\item{type}{[\code{character(1)}]\cr
The type of update to perform. Must be one of
    c("major", "minor" , "fix" , "develop" , "first").
    Defaults to "develop".}

\item{document}{[\code{logical(1)}]\cr
Should styling be performed and documentation be updated. Defaults to \code{FALSE}.}

\item{\dots}{Other arguments to be passed to \code{\link{document_NVIpkg}}.}
}
\value{
None. Modifies \code{NEWS} and \code{DESCRIPTION} and eventually
    updates help.
}
\description{
Increase the package version in the \code{DESCRIPTION}
    and \code{NEWS} files. As a default, the help and the reference
    manual will be styled and updated.
}
\details{
When publishing a new release, use \code{type} one of
    c("major", "minor", "fix"), depending of which release type
    it is.

    When \code{type = "first"}, the \code{NEWS} will be created with
    the template for the first release. If
    \code{\link{create_NVIpkg_skeleton}}
    has been used to create the package, the \code{DESCRIPTION}
    and \code{NEWS} files should already have been created with
    correct version number and \code{NEWS} template.

    When \code{type = "develop"}, the \code{NEWS} will be created
    with the template for the next release if the previous version
    was a release. If not, it increased the development version.
}
\examples{
\dontrun{
# Modifies \code{NEWS} and \code{DESCRIPTION} with new version number.
# You need to be in a package directory at you PC for the code to work.
pkg <- stringi::stri_extract_last_words(usethis::proj_path())
pkg_path = usethis::proj_path()

NVIpackager::increase_NVIpkg_version(pkg = pkg,
                                     pkg_path = pkg_path,
                                     type = "develop")

# If you publish a new release, you want to ensure that documentation is up to date.
NVIpackager::increase_NVIpkg_version(pkg = pkg,
                                     pkg_path = pkg_path,
                                     type = "minor",
                                     document = TRUE)
}

}
\author{
Petter Hopp Petter.Hopp@vetinst.no
}
